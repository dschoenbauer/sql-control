<?php namespace Ctimt\SqlControl\Framework;

use Ctimt\SqlControl\Framework\SqlChange;
use Ctimt\SqlControl\Framework\SqlGroup;
use PHPUnit_Framework_TestCase;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-09-13 at 17:49:29.
 */
class SqlGroupTest extends PHPUnit_Framework_TestCase
{

    /**
     * @var SqlGroup
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new SqlGroup();
    }

    public function testCurrentVersion()
    {
        $this->assertEquals('0.0.0', $this->object->setCurrentVersion('0.0.0')->getCurrentVersion());
    }

    public function testIncrementVersionSuccess()
    {
        $this->assertEquals('0.0.1', $this->object
                ->setCurrentVersion('0.0.0')
                ->incrementVersion('0.0.1')
                ->getCurrentVersion()
        );
    }

    public function testIncrementVersionFail()
    {
        $this->assertEquals('1.0.0', $this->object
                ->setCurrentVersion('1.0.0')
                ->incrementVersion('0.0.1')
                ->getCurrentVersion()
        );
    }

    public function testAdd()
    {
        $sqlChange = new SqlChange();
        $this->object->add($sqlChange);
        $this->assertEquals(1, count($this->object->getSqlChanges()));
        $this->object->add($sqlChange);
        $this->assertEquals(1, count($this->object->getSqlChanges()));
        $sqlChange->setName('new');
        $this->object->add($sqlChange);
        $this->assertEquals(2, count($this->object->getSqlChanges()));
    }

    public function testGetName()
    {
        $this->assertEquals('test', $this->object->setName('test')->getName());
    }
}
