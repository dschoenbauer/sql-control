<?php

namespace Ctimt\SqlControl\Adapter\SqlSrv\Filter;

use Ctimt\SqlControl\Framework\SqlChange;
use PHPUnit_Framework_TestCase;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-09-19 at 18:03:04.
 */
class AlterAddIndexTest extends PHPUnit_Framework_TestCase {

    /**
     * @var AlterAddIndex
     */
    protected $object;

    protected function setUp() {
        $mock = new SqlChange();
        $this->object = new AlterAddIndex();
        $this->object->setSqlChange($mock);
    }

    public function testFilter() {
        $sql = "ALTER TABLE Redirect ADD INDEX OneKey (redirect_key);";
        $expected = "CREATE INDEX OneKey ON Redirect (redirect_key)";
        $this->assertEquals(AlterAddIndex::SUCCESS_STATENT, $this->object->filter($sql));
        $this->assertEquals($expected, $this->object->getSqlChange()->getStatements()[0]);
    }

    public function testFilterUnique() {
        $sql = "ALTER TABLE Redirect ADD UNIQUE INDEX OneKey (redirect_key); ";
        $expected = "CREATE UNIQUE INDEX OneKey ON Redirect (redirect_key)";
        $this->assertEquals(AlterAddIndex::SUCCESS_STATENT, $this->object->filter($sql));
        $this->assertEquals($expected, $this->object->getSqlChange()->getStatements()[0]);
    }
    
    public function testFilterFullText() {
        $sql = "ALTER TABLE Redirect ADD FULLTEXT INDEX OneKey (redirect_key); ";
        $expected = "CREATE FULLTEXT INDEX OneKey ON Redirect (redirect_key)";
        $this->assertEquals(AlterAddIndex::SUCCESS_STATENT, $this->object->filter($sql));
        $this->assertEquals($expected, $this->object->getSqlChange()->getStatements()[0]);
    }

}
