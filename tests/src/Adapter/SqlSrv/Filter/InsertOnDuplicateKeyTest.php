<?php

namespace Ctimt\SqlControl\Adapter\SqlSrv\Filter;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-09-29 at 17:03:44.
 */
class InsertOnDuplicateKeyTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var InsertOnDuplicateKey
     */
    protected $object;

    protected function setUp() {
        $this->object = new InsertOnDuplicateKey();
    }

    public function testFilter() {
        $value = "INSERT INTO Distributor (distributor_id, distributor_name) VALUES('2','eventSPRING') ON DUPLICATE KEY UPDATE distributor_name = 'eventSPRING';";
        $expected = "INSERT INTO Distributor (distributor_id, distributor_name) VALUES('2','eventSPRING');";
        $this->assertEquals($expected,$this->object->filter($value));
    }
    
    public function testFilterAddedTrailingSemiColonBack() {
        $value = "INSERT INTO Distributor (distributor_id, distributor_name) VALUES('2','eventSPRING') ON DUPLICATE KEY UPDATE distributor_name = 'eventSPRING'";
        $expected = "INSERT INTO Distributor (distributor_id, distributor_name) VALUES('2','eventSPRING');";
        $this->assertEquals($expected,$this->object->filter($value));
    }
    public function testFilterWithWhiteSpace() {
        $value = "SET IDENTITY_INSERT dbo.[Distributor] ON;

INSERT INTO Distributor (distributor_id, distributor_name) VALUES('2','eventSPRING') ON DUPLICATE KEY UPDATE distributor_name = 'eventSPRING';SET IDENTITY_INSERT";
        $expected = "SET IDENTITY_INSERT dbo.[Distributor] ON;

INSERT INTO Distributor (distributor_id, distributor_name) VALUES('2','eventSPRING');SET IDENTITY_INSERT";
        $this->assertEquals($expected,$this->object->filter($value));
    }

}
